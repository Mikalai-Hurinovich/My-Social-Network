{"version":3,"sources":["components/News/News.module.css","components/Settings/Settings.module.css","components/Music/Music.module.css","components/Photos/Photos.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Navbar/Navbar.module.css","components/FiendsSideBar/Friends.module.css","assets/images/anonymous.jpg","assets/images/preloader.svg","components/Users/Styles.module.css","api/api.tsx","Redux/ProfileReducer.tsx","Redux/DialogsReducer.tsx","Redux/SideBarReducer.tsx","Redux/users-reducer.tsx","Redux/Auth-reducer.tsx","Redux/Redux-store.tsx","components/FiendsSideBar/Friends.tsx","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Settings/Settings.tsx","components/Music/Music.tsx","components/Photos/Photos.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","Utils/Validators/Validators.tsx","components/common/FormsControls/FormsControls.tsx","components/Dialogs/Dialogs.tsx","HOC/WithAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","components/ErrorPage/Error404.tsx","components/Users/Users.tsx","components/common/Preloader/Preloader.tsx","Redux/users-selectors.tsx","components/Users/UsersContainer.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","index.tsx","components/Dialogs/Dialogs.module.css","components/ErrorPage/Error.module.css","components/common/FormsControls/FormsControls.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css"],"names":["module","exports","news","settings","music","main","wrapper__photos","description","img","nav","item","active","wrapper_images","__webpack_require__","p","wrapper","user","userInfo","userLocation","userPhoto","selectedPage","page","instance","axios","create","withCredentials","baseURL","headers","API-KEY","UsersApi","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","userId","delete","post","console","warn","profileAPI","profileLink","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","initialState","posts","id","message","count","profile","setUserProfileAC","type","setStatusAC","ProfileReducer","state","action","stateCopy","JSON","parse","stringify","newPost","newPostText","push","Object","objectSpread","filter","postId","dialogs","name","messages","DialogsReducer","body","newMessageBody","toConsumableArray","friends","SideBarReducer","users","totalUsersCount","isFetching","followingInProgress","setCurrentPage","toggleIsFetching","toggleFollowingProgress","UsersReducer","map","u","userID","followed","totalCount","login","isAuth","loading","setAuthUserData","setAuthLoading","val","getAuthUserData","dispatch","resultCode","_data$data","finally","AuthReducer","reducers","combineReducers","profilePage","dialogsPage","sideBar","usersPage","usersReducer","auth","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","Friends","props","friendsElements","friend","react_default","a","createElement","key","src","alt","className","s","Navbar","react_router_dom","to","activeClassName","sidebar","News","content","Settings","Music","Photos","Typography","variant","DialogItem","dialog","Message","required","value","maxLengthCreator","maxLength","FormControl","input","child","meta","hasError","objectWithoutProperties","touched","error","formControl","children","Textarea","restProps","FormsControls_FormControl","assign","Input","AddMessageReduxForm","reduxForm","onSubmit","handleSubmit","Field","validate","component","placeholder","Dialogs","dialogsElements","d","DialogItem_DialogItem","messageElements","m","Message_Message","dialogsItems","formData","sendMessage","react_router","mapStateToPropsForRedirect","compose","Component","RedirectComponent","_React$Component","inherits","_super","_createSuper","classCallCheck","this","apply","createClass","React","connect","sendMessageAC","Error404","mainbox","err","far","err2","msg","href","Users","pagesCount","Math","ceil","pages","i","Fragment","onClick","onPageChanged","photos","small","anonymous","Button","disabled","toggleFollowInProgress","some","size","color","unfollow","follow","Preloader","preloader","getUsersReselect","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getToggleFollowInProgress","UsersContainer","UsersContainer_createSuper","_this","_len","args","Array","_key","call","pageNumber","requestUsers","common_Preloader_Preloader","components_Users_Users","items","Post","like","MyPosts","memo","log","postElements","MyPosts_Post_Post","postsWrapper","AddPostReduxForm","addPost","prevProps","nextProps","maxLength10","MyPostsContainer","addPostAC","ProfileStatus","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","_useState4","setStatus","useEffect","deactivateEditMode","onChange","e","currentTarget","autoFocus","onBlur","onKeyPress","onDoubleClick","ProfileInfo","large","ProfileInfo_ProfileStatus","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","match","params","authorizedUserId","history","getUserProfile","components_Profile_Profile","withRouter","Header","header","logo","loginBlock","logout","HeaderContainer","components_Header_Header","LoginReduxForm","formSummaryError","stopSubmit","_error","isAuthLoading","useSelector","Header_HeaderContainer","components_Navbar_Navbar","getState","exact","path","Login","render","Profile_ProfileContainer","DialogsContainer","Users_UsersContainer","ErrorPage_Error404","ReactDOM","react_redux_es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.12c01ca8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__e4v3X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__3kVw7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__1aeWg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Photos_main__1u_h6\",\"wrapper__photos\":\"Photos_wrapper__photos__2XkMD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__3SY5m\",\"img\":\"ProfileInfo_img__1PqHU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2BuCb\",\"item\":\"Navbar_item__25gvY\",\"active\":\"Navbar_active__3Kl5k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper_images\":\"Friends_wrapper_images__1J8MY\"};","module.exports = __webpack_public_path__ + \"static/media/anonymous.591d2cd5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.962f67ed.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Styles_wrapper__2NzrK\",\"main\":\"Styles_main__11i1m\",\"user\":\"Styles_user__15NWa\",\"userInfo\":\"Styles_userInfo__1hk9O\",\"userLocation\":\"Styles_userLocation__2u0aN\",\"userPhoto\":\"Styles_userPhoto__1gbUp\",\"selectedPage\":\"Styles_selectedPage__3sXBX\",\"page\":\"Styles_page__Qz6q1\"};","import axios from \"axios\";\n\n// DAL - DATA ACCESS LAYER\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': 'c43d539a-903b-4914-a22c-0ece781ccd2a'\n    }\n})\n\nexport const UsersApi = {\n    getUsers: (currentPage: number = 1, pageSize: number = 10) => {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`, {}).then(response => response.data)\n    },\n    unfollowUser: (userId: number) => {\n        return instance.delete(`follow/${userId}`, {}).then(response => response.data)\n    },\n    followUser: (userId: number) => {\n        return instance.post(`follow/${userId}`, {}, {}).then(response => response.data)\n    },\n    profileLink: (userId: number) => {\n        console.warn('Obsolete method.Please, use profileAPI object')\n        return profileAPI.profileLink(userId)\n    }\n}\n\nexport const profileAPI = {\n    profileLink: (userId: number) => {\n        return instance.get(`profile/${userId}`)\n            .then(response => response.data)\n    },\n    getStatus: (userId: number) => {\n        return instance.get(`profile/status/${userId}`)\n            .then(response => response.data)\n    },\n    updateStatus: (status: string) => {\n        return instance.put(`profile/status`, {status})\n            .then(response => response.data\n            )\n    }\n}\nexport const authAPI = {\n    authMe: () => {\n        return instance.get(`auth/me`).then(response => response.data)\n    },\n    login(email: string, password: any, rememberMe: boolean = false) {\n        return instance.post(`auth/login`, {email, password, rememberMe}).then(response => response.data)\n    },\n    logout() {\n        return instance.delete(`auth/login`).then(response => response.data)\n    },\n}\n","import {Dispatch} from \"redux\";\r\nimport {profileAPI, UsersApi} from \"../api/api\";\r\nimport {ProfilePageType} from \"../components/Profile/Profile\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_STATUS = 'SET-STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, How are you?', count: 10},\r\n        {id: 2, message: 'Good luck, in React)', count: 100},\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\nexport type SetUserProfileType = {\r\n    type: 'SET-USER-PROFILE'\r\n    profile: null\r\n}\r\nexport type AddPostActionType = {\r\n    type: 'ADD-POST',\r\n    newPostText: string\r\n}\r\nexport type DeletePostActionType = {\r\n    type: 'DELETE_POST',\r\n    postId: number\r\n}\r\nexport type SetStatusType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\n\r\nexport type ProfileActionsTypes = AddPostActionType | SetUserProfileType | SetStatusType | DeletePostActionType\r\n\r\nexport const ProfileReducer = (state: ProfilePageType = initialState, action: ProfileActionsTypes) => {\r\n    const stateCopy = JSON.parse(JSON.stringify(state))\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {id: 3, message: action.newPostText, count: 0}\r\n            stateCopy.posts.push(newPost)\r\n            stateCopy.newPostText = ''\r\n            return stateCopy;\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile}\r\n        case SET_STATUS:\r\n            return {...state, status: action.status}\r\n        case \"DELETE_POST\":\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        default:\r\n            return stateCopy;\r\n    }\r\n}\r\n\r\n// Thunk types\r\nexport type getStatusType = (userId: number) => (dispatch: Dispatch) => void;\r\nexport type updateStatusType = (status: string) => (dispatch: Dispatch) => void\r\nexport type getUserProfileType = (userId: number) => (dispatch: Dispatch) => void;\r\n// Thunks\r\nexport const getUserProfile: getUserProfileType = (userId: number) => (dispatch: Dispatch) => {\r\n    UsersApi.profileLink(userId).then(data => {\r\n        dispatch(setUserProfileAC(data))\r\n    })\r\n}\r\nexport const getStatus: getStatusType = (userId: number) => (dispatch: Dispatch) => {\r\n    profileAPI.getStatus(userId).then(data => {\r\n        dispatch(setStatusAC(data))\r\n    })\r\n}\r\nexport const updateStatus = (status: string) => (dispatch: Dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(setStatusAC(status))\r\n            }\r\n        })\r\n}\r\n// AC\r\nexport const setUserProfileAC = (profile: null): SetUserProfileType => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatusAC = (status: string): SetStatusType => ({type: SET_STATUS, status});\r\nexport const addPostAC = (newPostText: string): AddPostActionType => ({type: ADD_POST, newPostText})\r\nexport const deletePostAC = (postId: number): DeletePostActionType => ({type: DELETE_POST, postId})\r\nexport default ProfileReducer;\r\n","import {DialogsPageType} from \"../components/Dialogs/Dialogs\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Микола\"},\r\n        {id: 2, name: \"Дима\"},\r\n        {id: 3, name: \"Малыха\"},\r\n        {id: 4, name: \"Арчибальд\"},\r\n        {id: 5, name: \"Витя\"},\r\n        {id: 6, name: \"Артур\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Frontend?\"},\r\n        {id: 2, message: \"Let's go to Baikal!!!!\"},\r\n        {id: 3, message: \"Stop sitting at the computer, I want to go on vacation !!1\"},\r\n        {id: 4, message: \"Good Morning!\"},\r\n        {id: 5, message: \"Chao!\"},\r\n        {id: 6, message: \"Aufwiedersehen!\"}],\r\n\r\n}\r\n\r\nconst DialogsReducer = (state: DialogsPageType = initialState, action: SendMessageActionType): DialogsPageType => {\r\n    switch (action.type) {\r\n        case 'SEND-MESSAGE':\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}] // вместо метода push использ. spread\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type SendMessageActionType = {\r\n    type: 'SEND-MESSAGE',\r\n    newMessageBody: string\r\n}\r\nexport const sendMessageAC = (newMessageBody: string): SendMessageActionType => ({type: 'SEND-MESSAGE', newMessageBody})\r\nexport default DialogsReducer;\r\n","import {SideBarType} from \"../components/Navbar/Navbar\";\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {id: 1, name: \"Микола\", img: 'https://html5css.ru/w3images/avatar2.png'},\r\n        {\r\n            id: 2,\r\n            name: \"Дима\",\r\n            img: 'https://image.freepik.com/free-vector/businessman-character-avatar-isolated_24877-60111.jpg'\r\n        },\r\n        {id: 3, name: \"Малыха\", img: 'https://html5css.ru/howto/img_avatar2.png'},\r\n    ]\r\n};\r\nexport type SideBarActionsType = {}\r\nconst SideBarReducer = (state: SideBarType = initialState, action: SideBarActionsType) => {\r\n    return state;\r\n}\r\n\r\nexport default SideBarReducer;\r\n","import React from \"react\";\r\nimport {Dispatch} from \"redux\";\r\nimport {UsersApi} from \"../api/api\";\r\n\r\nconst SET_USERS = 'SET-USERS';\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nexport type UsersType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\nexport type UserType = {\r\n    id: number\r\n    photos: PhotosType\r\n    followed: boolean\r\n    name: string\r\n    message: string\r\n    location: LocationType\r\n\r\n}\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\nexport let initialState: UsersType = {\r\n    users: [],\r\n    pageSize: 6,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\ntype followACType = { type: typeof FOLLOW, userID: number }\r\ntype unfollowACType = { type: typeof UNFOLLOW, userID: number }\r\ntype setUsersACType = { type: typeof SET_USERS, users: UserType[] }\r\ntype setCurrentPage = { type: typeof SET_CURRENT_PAGE, currentPage: number }\r\ntype setUsersTotalCount = { type: typeof SET_TOTAL_USERS_COUNT, totalCount: number }\r\ntype setIsFetching = { type: typeof TOGGLE_IS_FETCHING, isFetching: boolean }\r\ntype setFollowInProgress = {\r\n    userId: number\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS, isFetching: boolean\r\n}\r\ntype ActionType = followACType\r\n    | unfollowACType\r\n    | setUsersACType\r\n    | setCurrentPage\r\n    | setUsersTotalCount\r\n    | setIsFetching\r\n    | setFollowInProgress\r\nconst UsersReducer = (state: UsersType = initialState, action: ActionType): UsersType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userID: number) => ({type: FOLLOW, userID});\r\nexport const unfollowSuccess = (userID: number) => ({type: UNFOLLOW, userID});\r\nexport const setUsers = (users: UserType[]) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalCount: number) => ({type: SET_TOTAL_USERS_COUNT, totalCount})\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n// ThunkCreator\r\nexport const requestUsers = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(currentPage))\r\n        UsersApi.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        })\r\n    }\r\n}\r\nexport const follow = (userId: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        UsersApi.followUser(userId).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(followSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId))\r\n        });\r\n    }\r\n}\r\nexport const unfollow = (userId: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        UsersApi.unfollowUser(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            });\r\n    }\r\n}\r\n\r\nexport default UsersReducer;\r\n","import React from \"react\";\r\nimport {Dispatch} from \"redux\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {authAPI} from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\nconst SET_AUTH_LOADING = 'SET_AUTH_LOADING'\r\n\r\nexport type AuthType = {\r\n    id: null | number,\r\n    email: null | string,\r\n    login: null | string,\r\n    isAuth: boolean\r\n    loading: boolean\r\n}\r\n\r\nexport let initialState: AuthType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    loading: true\r\n}\r\ntype setAuthUserDataType = {\r\n    data: AuthType;\r\n    type: typeof SET_USER_DATA, id: number\r\n}\r\ntype setAuthUserLoading = {\r\n    type: typeof SET_AUTH_LOADING, data: boolean\r\n}\r\n\r\ntype ActionType = setAuthUserDataType | setAuthUserLoading\r\nconst AuthReducer = (state: AuthType = initialState, action: ActionType): AuthType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        case SET_AUTH_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.data\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\nexport type getAuthUserDataType = () => any\r\n\r\nexport const setAuthUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n    type: SET_USER_DATA,\r\n    data: {id, login, email, isAuth}\r\n});\r\nexport const setAuthLoading = (val: boolean) => ({\r\n    type: SET_AUTH_LOADING,\r\n    data: val\r\n});\r\nexport const getAuthUserData: getAuthUserDataType = () => (dispatch: Dispatch) => {\r\n    authAPI.authMe().then(data => {\r\n        if (data.resultCode === 0) {\r\n            let {id, login, email} = data.data\r\n            dispatch(setAuthUserData(id, email, login, true))\r\n        }\r\n    }).finally(() => dispatch(setAuthLoading(false)))\r\n}\r\nexport const login = (email: string, password: any, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n    authAPI.login(email, password, rememberMe).then(data => {\r\n        if (data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            let message = data.messages.length > 0 ? data.messages[0] : 'Some error'\r\n            dispatch(stopSubmit('login', {_error: message}))\r\n        }\r\n    }).finally(() => dispatch(setAuthLoading(false)))\r\n}\r\nexport const logout = (email: string, password: any, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n    authAPI.logout().then(data => {\r\n        if (data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n    }).finally(() => dispatch(setAuthLoading(false)))\r\n}\r\n\r\nexport default AuthReducer;\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport ProfileReducer from \"./ProfileReducer\";\r\nimport DialogsReducer from \"./DialogsReducer\";\r\nimport SideBarReducer from \"./SideBarReducer\";\r\nimport usersReducer from './users-reducer';\r\nimport AuthReducer from \"./Auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\n// наш стейт\r\nlet reducers = combineReducers({\r\n    profilePage: ProfileReducer,\r\n    dialogsPage: DialogsReducer,\r\n    sideBar: SideBarReducer,\r\n    usersPage: usersReducer,\r\n    auth: AuthReducer,\r\n    form: formReducer\r\n});\r\n// автоматически создать типизацию для ф-ий с пом. конструкции ReturnType<typeof *Имя ф-ии*>\r\nexport type ReduxRootState = ReturnType<typeof reducers>\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nexport default store;\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n","import React from \"react\";\r\nimport s from './Friends.module.css'\r\nimport {FriendsType} from \"../Navbar/Navbar\";\r\n\r\ntype FriendsPropsType = {\r\n    friends: Array<FriendsType>\r\n}\r\n\r\nexport function Friends(props: FriendsPropsType) {\r\n    let friendsElements = props.friends.map(friend =>\r\n        <div key={friend.id}>\r\n            <img src={friend.img} alt=\"FriendImg\"/>\r\n            {friend.name}\r\n        </div>\r\n    )\r\n    return (\r\n        <div>\r\n            <h2>MY FRIENDS</h2>\r\n            <div className={s.wrapper_images}>\r\n                {friendsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\nimport {Friends} from \"../FiendsSideBar/Friends\";\r\n\r\nexport type SideBarType = {\r\n    friends: Array<FriendsType>\r\n}\r\nexport type FriendsType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n}\r\ntype SideBarPropsType = {\r\n    sidebar: SideBarType\r\n}\r\nconst Navbar = (props: SideBarPropsType) => {\r\n    return <nav className={s.nav}>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to='/Profile' activeClassName={s.active}>Profile</NavLink>\r\n        </div>\r\n        <div className={`${s.item}`}>\r\n            <NavLink to={'/Dialogs'} activeClassName={s.active}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to={'/Users'} activeClassName={s.active}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to={'/Photos'} activeClassName={s.active}>Photos</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to={'/News'} activeClassName={s.active}>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to={'/Music'} activeClassName={s.active}>Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to={'/Settings'} activeClassName={s.active}>Settings</NavLink>\r\n        </div>\r\n        <Friends friends={props.sidebar.friends}/>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport s from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.news}>Fresh News</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.settings}>Settings</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.music}>Your Music</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Photos.module.css'\r\nimport {Typography} from \"@material-ui/core\";\r\n\r\nconst Photos = () => {\r\n    return (\r\n        <Typography variant={\"h5\"} className={s.main}>\r\n            Photo Gallery\r\n            <div className={s.wrapper__photos}>\r\n                <img\r\n                    src=\"https://images.pexels.com/photos/3225517/pexels-photo-3225517.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"\r\n                    alt=\"\"/>\r\n                <img\r\n                    src=\"https://pi.tedcdn.com/r/talkstar-assets.s3.amazonaws.com/production/playlists/playlist_398/reconnect_with_nature.jpg?\"\r\n                    alt=\"\"/>\r\n                <img\r\n                    src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQqcYXgEvWlAFg4Kkqa47N4UwXIqz3ni1CZ6w&usqp=CAU\"\r\n                    alt=\"\"/>\r\n                <img\r\n                    src=\"https://media.nature.com/lw800/magazine-assets/d41586-020-01390-w/d41586-020-01390-w_17974388.jpg\"\r\n                    alt=\"\"/>\r\n                <img src=\"https://iso.500px.com/wp-content/uploads/2016/03/stock-photo-142984111.jpg\" alt=\"\"/>\r\n                <img\r\n                    src=\"https://lh3.googleusercontent.com/CrhU1hnoaVfR4tEhZbHM8PU7czpg6nmjNbHi3KjhC9-bTk7AD6-Qej2aPG06yClb-l1Yx8cWUol9au6jJjFMN4ITmQ=w640-h400-e365-rj-sc0x00ffffff\"\r\n                    alt=\"\"/>\r\n                <img\r\n                    src=\"https://i.guim.co.uk/img/media/18c7596e2cda2b1f2b943c938b977b59028c5f86/0_500_3915_2348/master/3915.jpg?width=1200&height=1200&quality=85&auto=format&fit=crop&s=37fbad4d1544e39800b4be4bf53078ed\"\r\n                    alt=\"\"/>\r\n                <img\r\n                    src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcREIm6wcLGw99uqZujlMET1F-N81G951HSbLg&usqp=CAU\"\r\n                    alt=\"\"/>\r\n                <img\r\n                    src=\"http://webneel.com/wallpaper/sites/default/files/images/08-2018/3-nature-wallpaper-mountain.jpg\"\r\n                    alt=\"\"/>\r\n            </div>\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default Photos;\r\n","import s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport type DialogsItemType = {\r\n    name: string\r\n    id: number\r\n}\r\nexport const DialogItem = (props: DialogsItemType) => {\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <NavLink to={`/Dialogs/${props.id}`}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem;","import s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\ntype MessageType = {\r\n    message: string\r\n}\r\nexport const Message = (props: MessageType) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\nexport default Message;","export const required = (value: string) => {\n    if (value) return undefined;\n\n    return \"Field is required\";\n}\n\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\n\n    return undefined;\n}\n","import React, {ComponentProps} from \"react\";\nimport s from './FormsControls.module.css'\n\nconst FormControl = (props: any) => {\n    const {input, child, meta, ...restProps} = props;\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={`${s.formControl} ${hasError ? s.error : ''}`}>\n            <div>\n                {props.children}\n            </div>\n            <div>\n                {hasError && <span>{meta.error}</span>}\n            </div>\n        </div>\n    )\n}\n\nexport const Textarea = (props: ComponentProps<any>) => {\n    const {input, child, meta, ...restProps} = props;\n    return <FormControl {...props}><textarea {...props.input} {...restProps}/></FormControl>\n}\nexport const Input = (props: ComponentProps<any>) => {\n    const {input, child, meta, ...restProps} = props;\n    return <FormControl {...props}><input {...props.input} {...restProps}/></FormControl>\n}\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {DialogsComponentType, dialogsDataType, MessagesType} from \"./DialogsContainer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../Utils/Validators/Validators\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\n\r\nexport type DialogsPageType = {\r\n    dialogs: dialogsDataType[]\r\n    messages: Array<MessagesType>\r\n}\r\ntype AddMessageFormType = {\r\n    newMessageBody: string\r\n}\r\nconst Dialogs = (props: DialogsComponentType) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n    let messageElements = state.messages.map(m => <Message key={m.id} message={m.message}/>)\r\n\r\n    const addNewMessage = (formData: AddMessageFormType) => {\r\n        props.sendMessage(formData.newMessageBody)\r\n    }\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElements}</div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet maxLength = maxLengthCreator(50)\r\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessageFormType>> = (props: InjectedFormProps<AddMessageFormType>) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field validate={[required, maxLength]}\r\n                    component={Textarea}\r\n                    name={'newMessageBody'}\r\n                    placeholder={'Enter Your Message...'}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm<AddMessageFormType>({form: 'AddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n","import React, {Component, ComponentType} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {ReduxRootState} from \"../Redux/Redux-store\";\nimport {connect} from \"react-redux\";\n\ntype PropsType = {\n    isAuth: boolean\n}\nlet mapStateToPropsForRedirect = (state: ReduxRootState): PropsType => ({\n    isAuth: state.auth.isAuth,\n});\nexport const withAuthRedirect = (Component: ComponentType) => {\n\n    class RedirectComponent extends React.Component<PropsType> {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\n            return <Component {...this.props}/>\n        }\n    }\n\n\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedRedirectComponent;\n}\n\n\n\n","import React from 'react';\r\nimport {sendMessageAC} from \"../../Redux/DialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {ReduxRootState} from \"../../Redux/Redux-store\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\n\r\nexport type DialogsPageType = {\r\n    dialogs: dialogsDataType[]\r\n    messages: Array<MessagesType>\r\n}\r\nexport type dialogsDataType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type MapStateToPropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\nexport type MapDispatchToPropsType = {\r\n    sendMessage: (newMessageBody: string) => void\r\n}\r\n\r\nexport type OwnPropsType = {}\r\n\r\nlet mapStateToProps = (state: ReduxRootState): MapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        sendMessage: (newMessageBody: string) => {\r\n            dispatch(sendMessageAC(newMessageBody)\r\n            )\r\n        }\r\n    }\r\n}\r\nexport type DialogsComponentType = {\r\n    dialogsPage: DialogsPageType\r\n    sendMessage: (newMessageBody: string) => void\r\n    isAuth: boolean\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    connect<MapStateToPropsType, MapDispatchToPropsType, OwnPropsType, ReduxRootState>(mapStateToProps, mapDispatchToProps),\r\n)(Dialogs);\r\n","import React from 'react'\r\nimport s from './Error.module.css'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div className={s.mainbox}>\r\n                <div className={s.err}>4</div>\r\n                <i className={`${s.far} far fa-question-circle fa-spin`}></i>\r\n                <div className={s.err2}>4</div>\r\n                <div className={s.msg}>Maybe this page moved? Got deleted? Is hiding out in quarantine? Never existed in\r\n                    the first\r\n                    place?<p>Let's go <a href=\"/Profile\">home</a> and try from there.</p></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react';\nimport s from \"./Styles.module.css\";\nimport anonymous from \"../../assets/images/anonymous.jpg\";\nimport {Button} from \"@material-ui/core\";\nimport {UserType} from \"../../Redux/users-reducer\";\nimport {NavLink} from 'react-router-dom';\n\ntype PropsType = {\n    users: UserType[]\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    follow: (userID: number) => void\n    unfollow: (userID: number) => void\n    onPageChanged: (pageNumber: number) => void\n    toggleFollowInProgress: Array<number>\n\n}\n\nconst Users = (props: PropsType) => {\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n    return (\n        <>\n            <div className={s.wrapper}>\n                {pages.map(p => {\n                    return <span key={p}\n                                 onClick={() => {\n                                     props.onPageChanged(p)\n                                 }}\n                                 className={props.currentPage! === p && `${s.page} ${s.selectedPage}` || s.page}>{p}\n                        </span>\n                })}\n                {props.users.map(u => <div key={u.id}>\n                    <div className={s.main}>\n                        <div className={s.user}>\n                            <NavLink to={`/profile/${u.id}`}>\n                                <img className={s.userPhoto} src={u.photos.small !== null ? u.photos.small : anonymous}\n                                     alt=\"\"/>\n                            </NavLink>\n                            {u.followed ?\n                                <Button disabled={props.toggleFollowInProgress.some(id => id === u.id)} size={'small'}\n                                        color={'primary'}\n                                        variant={\"contained\"}\n                                        onClick={() => {\n                                            props.unfollow(u.id)\n                                        }}>Unfollow</Button> :\n                                <Button disabled={props.toggleFollowInProgress.some(id => id === u.id)} size={'small'}\n                                        color={'primary'}\n                                        variant={\"contained\"} onClick={() => {\n                                    props.follow(u.id)\n                                }}>Follow</Button>}\n                        </div>\n                        <div className={s.userInfo}>\n                            <span>{u.name}</span>\n                            <span>{u.message}</span>\n                        </div>\n                        <div className={s.userLocation}>{'u.location.country'}, {'u.location.city'}</div>\n                    </div>\n                </div>)}\n            </div>\n        </>\n    );\n};\n\nexport default Users;\n","import React from 'react';\nimport preloader from \"../../../assets/images/preloader.svg\";\n\nconst Preloader = () => {\n    return (\n        <div>\n            <img src={preloader} alt={'PreloaderImg'}/>\n        </div>\n    );\n};\n\nexport default Preloader;\n","import {ReduxRootState} from \"./Redux-store\";\nimport {createSelector} from \"reselect\";\n\nconst getUsersSelector = (state: ReduxRootState) => {\n    return state.usersPage.users;\n}\n\nexport const getUsersReselect = createSelector(getUsersSelector, (users) => users.filter(u => true))\n\nexport const getPageSize = (state: ReduxRootState) => {\n    return state.usersPage.pageSize\n}\n\nexport const getTotalUsersCount = (state: ReduxRootState) => {\n    return state.usersPage.totalUsersCount\n}\nexport const getCurrentPage = (state: ReduxRootState) => {\n    return state.usersPage.currentPage\n}\n\nexport const getIsFetching = (state: ReduxRootState) => {\n    return state.usersPage.isFetching\n}\nexport const getToggleFollowInProgress = (state: ReduxRootState) => {\n    return state.usersPage.followingInProgress\n}\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxRootState} from \"../../Redux/Redux-store\";\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollow,\r\n    UserType\r\n} from \"../../Redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getToggleFollowInProgress,\r\n    getTotalUsersCount,\r\n    getUsersReselect\r\n} from \"../../Redux/users-selectors\";\r\n\r\n\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nexport class UsersContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        if (this.props.users.length === 0) {\r\n            this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n        }\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.requestUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   onPageChanged={this.onPageChanged}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   isFetching={this.props.isFetching}\r\n                   toggleFollowInProgress={this.props.toggleFollowInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nexport type MapStateToPropsType = {\r\n    users: UserType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    toggleFollowInProgress: Array<number>\r\n}\r\n\r\nexport type MapDispatchToPropsType = {\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\n// приниамает весь стейт приложения и возвращает только объект, с необходимыми данными\r\nexport function mapStateToProps(state: ReduxRootState) {\r\n    return {\r\n        users: getUsersReselect(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        toggleFollowInProgress: getToggleFollowInProgress(state)\r\n    }\r\n}\r\n\r\n\r\n// Создает контейнерную компоненту\r\n\r\nexport default compose<React.ComponentType>(\r\n    // withAuthRedirect,\r\n    connect<MapStateToPropsType, MapDispatchToPropsType, {}, ReduxRootState>(mapStateToProps, {\r\n            follow,\r\n            unfollow,\r\n            setCurrentPage,\r\n            toggleFollowingProgress,\r\n            requestUsers,\r\n        }\r\n    )\r\n)(UsersContainer)\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\ntype MessageType = {\r\n    message: string\r\n    count: number\r\n}\r\n\r\nconst Post = (props: MessageType) => {\r\n    return (\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <img src=\"https://i1.sndcdn.com/avatars-000549236160-xswcpb-t500x500.jpg\" alt=\"PostImg\"/>\r\n            {props.message}\r\n            <br/>\r\n            <div>\r\n                <span className={s.like}>Like {props.count}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../Utils/Validators/Validators\";\r\n\r\ntype PropsType = {\r\n    addPost: (newPostText: string) => void\r\n    posts: postsDataType[]\r\n    newPostText: string\r\n}\r\ntype postsDataType = {\r\n    id: number\r\n    message: string\r\n    count: number\r\n}\r\n\r\nexport type addPostFormType = {\r\n    newPostText: string\r\n}\r\nconst MyPosts = React.memo((props: PropsType) => {\r\n    console.log('RENDER')\r\n    let postElements = props.posts.map(p => <Post key={p.id} message={p.message} count={p.count}/>)\r\n    const onAddPost = (formData: addPostFormType) => {\r\n        props.addPost(formData.newPostText)\r\n    }\r\n    return (\r\n        <div className={s.postsWrapper}>\r\n            <Typography variant={'h4'}>My posts</Typography>\r\n            <AddPostReduxForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}, (prevProps, nextProps) => {\r\n    return prevProps.posts.length === nextProps.posts.length\r\n})\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst addNewPostForm: React.FC<InjectedFormProps<addPostFormType>> = (props: InjectedFormProps<addPostFormType>) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.item}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name={'newPostText'}\r\n                       validate={[required, maxLength10]}\r\n                       placeholder={'Your post message...'}/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddPostReduxForm = reduxForm<addPostFormType>({form: 'addPost'})(addNewPostForm)\r\n\r\nexport default MyPosts;\r\n\r\n\r\n","import React from 'react';\r\nimport {addPostAC} from \"../../../Redux/ProfileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxRootState} from \"../../../Redux/Redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype postsDataType = {\r\n    id: number\r\n    message: string\r\n    count: number\r\n}\r\nexport type MapStateToPropsType = {\r\n    newPostText: string\r\n    posts: postsDataType[]\r\n}\r\n\r\nexport type MapDispatchToPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nexport type OwnPropsType = {}\r\n\r\nlet mapStateToProps = (state: ReduxRootState): MapStateToPropsType => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostAC(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect<MapStateToPropsType, MapDispatchToPropsType, OwnPropsType, ReduxRootState>(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, {useEffect, useState} from \"react\";\nimport {updateStatusType} from \"../../../Redux/ProfileReducer\";\n\ntype ProfileStatusType = {\n    status: string\n    updateStatus: updateStatusType\n}\n\nconst ProfileStatus = (props: ProfileStatusType) => {\n    const [editMode, setEditMode] = useState(false);\n    const [status, setStatus] = useState(props.status);\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status])\n\n    const activateEditMode = () => setEditMode(true)\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n    const onChangeStatusWithEnterPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        e.key === 'Enter' ? deactivateEditMode() : null;\n    }\n    const onStatusChange = (e: React.FormEvent<HTMLInputElement>) => setStatus(e.currentTarget.value)\n    return <>\n        {!editMode\n            ?\n            <div>\n                <span onDoubleClick={activateEditMode}>{props.status || 'Set your Status'}</span>\n            </div>\n            :\n            editMode &&\n            <div>\n                <input\n                    onChange={onStatusChange}\n                    autoFocus={true}\n                    onBlur={deactivateEditMode}\n                    onKeyPress={onChangeStatusWithEnterPress}\n                    value={status}\n                />\n            </div>\n        }\n    </>\n};\n\n\nexport default ProfileStatus;\n","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport {updateStatusType} from \"../../../Redux/ProfileReducer\";\r\n\r\ntype PropsType = {\r\n    profile: any\r\n    status: string\r\n    updateStatus: updateStatusType\r\n}\r\n\r\nconst ProfileInfo = (props: PropsType) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.img}>\r\n            </div>\r\n            <div className={s.description}>\r\n                <img src={props.profile.photos.large} alt=\"UserPhoto\"/>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {updateStatusType} from \"../../Redux/ProfileReducer\";\r\n\r\nexport type PostsDataType = {\r\n    id: number\r\n    message: string\r\n    count: number\r\n}\r\nexport type ProfilePageType = {\r\n    posts: PostsDataType[]\r\n}\r\ntype PropsType = {\r\n    profile: ProfilePageType\r\n    status: string\r\n    updateStatus: updateStatusType\r\n}\r\nconst Profile = (props: PropsType) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React, {Component} from 'react';\r\nimport Profile, {ProfilePageType} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatus,\r\n    getStatusType,\r\n    getUserProfile,\r\n    getUserProfileType,\r\n    updateStatus,\r\n    updateStatusType\r\n} from \"../../Redux/ProfileReducer\";\r\nimport {ReduxRootState} from \"../../Redux/Redux-store\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from \"redux\";\r\n\r\ntype ProfileContainerType = {\r\n    profile: ProfilePageType\r\n    setUserProfile: (profile: null) => void\r\n    getStatus: getStatusType\r\n    match: any\r\n    history: any\r\n    getUserProfile: getUserProfileType\r\n    isAuth: boolean\r\n    status: string\r\n    updateStatus: updateStatusType\r\n    authorizedUserId: null | number\r\n}\r\n\r\nclass ProfileContainer extends Component<ProfileContainerType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: ReduxRootState) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n\r\n});\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getStatus,\r\n        updateStatus\r\n    }),\r\n    withRouter,\r\n    // withAuthRedirect,\r\n)(ProfileContainer)\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from \"./Header.module.css\";\r\nimport {getAuthUserDataType} from \"../../Redux/Auth-reducer\";\r\n\r\ntype HeaderType = {\r\n    getAuthUserData: getAuthUserDataType\r\n    isAuth: boolean\r\n    login: null | string\r\n    email: string | null\r\n    logout: any\r\n}\r\n\r\nconst Header = (props: HeaderType) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.logo}>\r\n                <img src='https://i.pinimg.com/originals/3f/3d/d9/3f3dd9219f7bb1c9617cf4f154b70383.jpg'\r\n                     alt={'logoImg'}/>\r\n            </div>\r\n\r\n            <div className={s.loginBlock}>\r\n                <div>{props.isAuth || props.login ?\r\n                    <div>\r\n                        {props.login} - <button onClick={props.logout}>Log Out</button>\r\n                    </div> :\r\n                    <NavLink to={'/login'}>Login</NavLink>}</div>\r\n                <div>{props.isAuth || props.login ? props.email : null}</div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, getAuthUserDataType, logout} from \"../../Redux/Auth-reducer\";\r\nimport {ReduxRootState} from \"../../Redux/Redux-store\";\r\n\r\ntype HeaderContainerType = {\r\n    isAuth: boolean\r\n    login: null | string\r\n    email: null | string\r\n    getAuthUserData: getAuthUserDataType\r\n    logout: (email: string, password: any, rememberMe: boolean) => void\r\n}\r\n\r\nclass HeaderContainer extends Component<HeaderContainerType> {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: ReduxRootState) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    email: state.auth.email\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData, logout})(HeaderContainer);\r\n","import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../Utils/Validators/Validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../Redux/Auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport {ReduxRootState} from \"../../Redux/Redux-store\";\nimport s from './../common/FormsControls/FormsControls.module.css'\n\ntype FormDataType = {\n    email: string;\n    password: string\n    rememberMe: boolean\n}\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props: InjectedFormProps<FormDataType>) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field validate={[required]} placeholder={'Email'} name={'email'} component={Input}/>\n            </div>\n            <div>\n                <Field validate={[required]} placeholder={'Password'} type={'password'} name={'password'}\n                       component={Input}/>\n            </div>\n            <div>\n                <Field type={'checkbox'} name={'rememberMe'} component={Input}/> Remember Me\n            </div>\n            {props.error && <div className={s.formSummaryError}>\n                {props.error}\n            </div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    );\n};\n\nconst LoginReduxForm = reduxForm<FormDataType>({\n    // set unique name\n    form: 'login'\n})(LoginForm)\nconst mapStateToProps = (state: ReduxRootState) => ({\n    isAuth: state.auth.isAuth\n})\nconst Login = (props: any) => {\n    const onSubmit = (formData: FormDataType) => {\n        props.login(formData.email, formData.password, formData.rememberMe)\n    }\n    if (props.isAuth) return <Redirect to={'/Profile'}/>\n    return (\n        <div>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    );\n};\n\nexport default connect(mapStateToProps, {login})(Login);\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from \"./components/News/News\";\r\nimport Settings from './components/Settings/Settings';\r\nimport Music from \"./components/Music/Music\";\r\nimport Photos from './components/Photos/Photos';\r\nimport {Route, Switch, withRouter} from 'react-router-dom';\r\nimport store, {ReduxRootState} from './Redux/Redux-store'\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport Error404 from \"./components/ErrorPage/Error404\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {getAuthUserData} from \"./Redux/Auth-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\ntype getAuthUserDataType = ReturnType<typeof getAuthUserData>\r\nconst App = (props: getAuthUserDataType) => {\r\n    const {isAuthLoading} = useSelector((state: ReduxRootState) => ({\r\n        isAuthLoading: state.auth.loading\r\n    }))\r\n    useEffect(() => {\r\n        props.getAuthUserData();\r\n    }, [])\r\n\r\n    return (\r\n        <div className='app-wrapper'>\r\n            <HeaderContainer/>\r\n            <Navbar sidebar={store.getState().sideBar}/>\r\n            {!isAuthLoading && <div className='app-wrapper-content'>\r\n                <Switch>\r\n                    <Route exact path={'/'} component={Login}/>\r\n                    <Route path={'/Profile/:userId?'}\r\n                           render={() => <ProfileContainer/>}/>\r\n                    <Route path={'/Dialogs'}\r\n                           render={() => <DialogsContainer/>}/>\r\n                    <Route path={'/Users'} render={() => <UsersContainer/>}/>\r\n                    <Route path={'/Photos'} component={Photos}/>\r\n                    <Route path={'/News'} component={News}/>\r\n                    <Route path={'/Music'} component={Music}/>\r\n                    <Route path={'/Settings'} component={Settings}/>\r\n                    <Route path={'/Login'} component={Login}/>\r\n                    <Route render={() => <Error404/>}/>\r\n                </Switch>\r\n            </div>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default compose<React.ComponentType>(withRouter,\r\n    connect(null, {getAuthUserData}))(App);\r\n","import React from 'react';\r\nimport './index.css';\r\nimport store from \"./Redux/Redux-store\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>, document.getElementById('root'));\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2NgRO\",\"dialogsItems\":\"Dialogs_dialogsItems__ZJPwd\",\"active\":\"Dialogs_active__2Ur0N\",\"dialog\":\"Dialogs_dialog__2QOja\",\"messages\":\"Dialogs_messages__1_W6V\",\"message\":\"Dialogs_message__2nivj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainbox\":\"Error_mainbox__1mVHX\",\"err\":\"Error_err__22jY5\",\"far\":\"Error_far__1yg-N\",\"err2\":\"Error_err2__2Zad1\",\"msg\":\"Error_msg__2jdsO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2mcER\",\"error\":\"FormsControls_error__TJkLv\",\"formSummaryError\":\"FormsControls_formSummaryError__t9EFQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsWrapper\":\"MyPosts_postsWrapper__OMtkM\",\"posts\":\"MyPosts_posts__1_Q7q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__YRonC\",\"active\":\"Post_active__3kZNd\",\"like\":\"Post_like__1BkTM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Obmbc\",\"loginBlock\":\"Header_loginBlock__-dnfY\"};"],"sourceRoot":""}